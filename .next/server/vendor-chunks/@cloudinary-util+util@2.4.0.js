"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@cloudinary-util+util@2.4.0";
exports.ids = ["vendor-chunks/@cloudinary-util+util@2.4.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@cloudinary-util+util@2.4.0/node_modules/@cloudinary-util/util/dist/index.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@cloudinary-util+util@2.4.0/node_modules/@cloudinary-util/util/dist/index.mjs ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertColorHexToRgb: () => (/* binding */ convertColorHexToRgb),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   getFormat: () => (/* binding */ getFormat),\n/* harmony export */   getPublicId: () => (/* binding */ getPublicId),\n/* harmony export */   getTransformations: () => (/* binding */ getTransformations),\n/* harmony export */   objectHasKey: () => (/* binding */ objectHasKey),\n/* harmony export */   parseUrl: () => (/* binding */ parseUrl),\n/* harmony export */   sortByKey: () => (/* binding */ sortByKey),\n/* harmony export */   testColorIsHex: () => (/* binding */ testColorIsHex)\n/* harmony export */ });\n// src/lib/cloudinary.ts\nvar REGEX_VERSION = /\\/v\\d+\\//;\nvar REGEX_FORMAT = /\\.(ai|avif|gif|png|webp|bmp|bw|djvu|dng|ps|ept|eps|eps3|fbx|flif|gif|glb|gltf|heif|heic|ico|indd|jpg|jpe|jpeg|jp2|wdp|jxr|hdp|obj|pdf|ply|png|psd|arw|cr2|svg|tga|tif|tiff|u3ma|usdz|webp|3g2|3gp|avi|flv|m3u8|ts|m2ts|mts|mov|mkv|mp4|mpeg|mpd|mxf|ogv|webm|wmv)$/i;\nvar REGEX_URL = /https?:\\/\\/(?<host>[^\\/]+)\\/(?<cloudName>[^\\/]+)\\/(?<assetType>image|images|video|videos|raw|files)\\/(?<deliveryType>upload|fetch|private|authenticated|sprite|facebook|twitter|youtube|vimeo)?\\/?(?<signature>s--([a-zA-Z0-9\\_\\-]{8}|[a-zA-Z0-9\\_\\-]{32})--)?\\/?(?<transformations>(?:[^_\\/]+_[^,\\/]+,?\\/?)*\\/)*(?<version>v\\d+|\\w{1,2})\\/(?<publicId>[^\\s]+)$/;\nvar ASSET_TYPES_SEO = [\n    \"images\",\n    \"videos\",\n    \"files\"\n];\nfunction parseUrl(src) {\n    var _a, _b, _c, _d;\n    if (typeof src !== \"string\") {\n        throw new Error(`Failed to parse URL: Invalid src of type ${typeof src}`);\n    }\n    const hasVersion = REGEX_VERSION.test(src);\n    if (!hasVersion) {\n        throw new Error(`Invalid src: Does not include version (Ex: /v1234/)`);\n    }\n    const [baseUrlWithExtension, queryString] = src.split(\"?\");\n    const format = getFormat(baseUrlWithExtension);\n    let baseUrl = baseUrlWithExtension;\n    if (format) {\n        baseUrl = baseUrlWithExtension.replace(new RegExp(`${format}$`), \"\");\n    }\n    const results = baseUrl.match(REGEX_URL);\n    const transformations = (_b = (_a = results == null ? void 0 : results.groups) == null ? void 0 : _a.transformations) == null ? void 0 : _b.split(\"/\").filter((t)=>!!t);\n    const parts = {\n        ...results == null ? void 0 : results.groups,\n        format,\n        seoSuffix: void 0,\n        transformations: transformations || [],\n        queryParams: {},\n        version: ((_c = results == null ? void 0 : results.groups) == null ? void 0 : _c.version) ? parseInt(results.groups.version.replace(\"v\", \"\")) : void 0\n    };\n    if (queryString) {\n        parts.queryParams = queryString.split(\"&\").reduce((prev, curr)=>{\n            const [key, value] = curr.split(\"=\");\n            prev[key] = value;\n            return prev;\n        }, {});\n    }\n    if (parts.assetType && ASSET_TYPES_SEO.includes(parts.assetType)) {\n        const publicIdParts = ((_d = parts.publicId) == null ? void 0 : _d.split(\"/\")) || [];\n        parts.seoSuffix = publicIdParts.pop();\n        parts.publicId = publicIdParts.join(\"/\");\n    }\n    if (parts.publicId) {\n        parts.publicId = decodeURIComponent(parts.publicId);\n    }\n    return parts;\n}\nfunction getPublicId(src) {\n    const { publicId } = parseUrl(src) || {};\n    return publicId;\n}\nfunction getTransformations(src) {\n    const { transformations = [] } = parseUrl(src) || {};\n    return transformations.map((t)=>t.split(\",\"));\n}\nfunction getFormat(src) {\n    const matches = src.match(REGEX_FORMAT);\n    if (matches === null) return;\n    return matches[0];\n}\n// src/lib/colors.ts\nfunction testColorIsHex(value) {\n    if (typeof value !== \"string\") return false;\n    return !!value.startsWith(\"#\");\n}\nfunction convertColorHexToRgb(value) {\n    return `rgb:${value.replace(\"#\", \"\")}`;\n}\n// src/lib/util.ts\nfunction encodeBase64(value) {\n    if (typeof btoa === \"function\") {\n        return btoa(value);\n    }\n    if (typeof Buffer !== \"undefined\") {\n        return Buffer.from(value).toString(\"base64\");\n    }\n}\nfunction objectHasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction sortByKey(array = [], key, type = \"asc\") {\n    function compare(a, b) {\n        let keyA = a[key];\n        let keyB = b[key];\n        if (typeof keyA === \"string\") {\n            keyA = keyA.toLowerCase();\n        }\n        if (typeof keyB === \"string\") {\n            keyB = keyB.toLowerCase();\n        }\n        if (keyA < keyB) {\n            return -1;\n        }\n        if (keyA > keyB) {\n            return 1;\n        }\n        return 0;\n    }\n    let newArray = [\n        ...array\n    ];\n    if (typeof key !== \"string\") return newArray;\n    newArray = newArray.sort(compare);\n    if (type === \"desc\") {\n        return newArray.reverse();\n    }\n    return newArray;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@cloudinary-util+util@2.4.0/node_modules/@cloudinary-util/util/dist/index.mjs\n");

/***/ })

};
;